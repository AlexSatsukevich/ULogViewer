<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:appControls="using:CarinaStudio.ULogViewer.Controls"
		xmlns:appConverters="using:CarinaStudio.ULogViewer.Converters"
        xmlns:asControls="using:CarinaStudio.AppSuite.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="CarinaStudio.ULogViewer.Controls.OperationDurationAnalysisRuleSetEditorDialog"
        CanResize="True"
        Classes="Dialog"
        Height="{StaticResource Double/OperationDurationAnalysisRuleSetEditorDialog.Height}"
        MinHeight="{StaticResource Double/OperationDurationAnalysisRuleSetEditorDialog.MinHeight}"
        MinWidth="{StaticResource Double/OperationDurationAnalysisRuleSetEditorDialog.MinWidth}"
		Icon="/ULogViewer.ico"
		ShowInTaskbar="True"
        SizeToContent="Manual"
        Title="{DynamicResource String/OperationDurationAnalysisRuleSetEditorDialog.Title}"
        Width="{StaticResource Double/OperationDurationAnalysisRuleSetEditorDialog.Width}">

	<DockPanel>

		<!-- Control buttons -->
		<Border Classes="Dialog_ControlButtonsPanel">
			<StackPanel Classes="Dialog_ControlButtonsPanel">
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].OpenDocumentation}" Content="{DynamicResource String/Common.Help}"/>
				<Separator Classes="Dialog_Separator_Small"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].CompleteEditing}" Content="{DynamicResource String/Common.OK}" IsEnabled="{Binding $parent[Window].AreValidParameters}"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].Close}" Content="{DynamicResource String/Common.Cancel}"/>
			</StackPanel>
		</Border>

		<!-- Content -->
		<ScrollViewer>
			<StackPanel Classes="Dialog_ContentPanel_WithItemsGroups">

				<Border Classes="Dialog_ItemsGroup_Container">
					<StackPanel>
				
						<!-- Name -->
						<asControls:DialogItemGrid>
							<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/DisplayableLogAnalysisRuleSetEditorDialog.Name}"/>
							<TextBox Name="nameTextBox" Classes="Dialog_Item_TextBox" Grid.Column="1" MaxLength="256" Watermark="{DynamicResource String/Common.Required}"/>
						</asControls:DialogItemGrid>
						<Separator Classes="Dialog_Item_Separator"/>

						<!-- Icon -->
						<asControls:DialogItemGrid>
							<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/DisplayableLogAnalysisRuleSetEditorDialog.Icon}"/>
							<appControls:LogProfileIconComboBox Name="iconComboBox" Classes="Dialog_Item_ComboBox" Grid.Column="1" IconColor="{Binding #iconColorComboBox.SelectedItem}"/>
						</asControls:DialogItemGrid>
						<Separator Classes="Dialog_Item_Separator"/>

						<!-- Icon color -->
						<asControls:DialogItemGrid>
							<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/DisplayableLogAnalysisRuleSetEditorDialog.IconColor}"/>
							<appControls:LogProfileIconColorComboBox Name="iconColorComboBox" Classes="Dialog_Item_ComboBox" Grid.Column="1"/>
						</asControls:DialogItemGrid>

					</StackPanel>
				</Border>
				<Separator Classes="Dialog_Separator"/>

				<!-- Rules -->
				<Border Classes="Dialog_ItemsGroup_Container">
					<StackPanel>
						<asControls:DialogItemGrid>
							<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/DisplayableLogAnalysisRuleSetEditorDialog.Rules}"/>
							<TextBlock Classes="Dialog_TextBlock" Grid.Column="1" IsVisible="{Binding !#ruleListBox.IsVisible}" Text="{DynamicResource String/Common.None}"/>
						</asControls:DialogItemGrid>
						<Line Classes="Dialog_Item_Separator_Inner"/>
						<asControls:ListBox Name="ruleListBox" Classes="Dialog_Item_ListBox" IsVisible="{Binding $parent[Window].Rules.Count}" ItemsSource="{Binding $parent[Window].Rules}">
							<asControls:ListBox.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel/>
								</ItemsPanelTemplate>
							</asControls:ListBox.ItemsPanel>
							<asControls:ListBox.ItemTemplate>
								<DataTemplate>
									<Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,Auto,*">
										<Panel Classes="ListBoxItem_Icon">
											<Image Classes="Icon" IsVisible="{Binding $parent[ListBoxItem].IsSelected}" Source="{Binding ResultType, Converter={x:Static appConverters:DisplayableLogAnalysisResultIconConverter.Default}, ConverterParameter=Light}"/>
											<Image Classes="Icon" IsVisible="{Binding !$parent[ListBoxItem].IsSelected}" Source="{Binding ResultType, Converter={x:Static appConverters:DisplayableLogAnalysisResultIconConverter.Default}}"/>
										</Panel>
										<TextBlock Classes="ListBoxItem_TextBlock" Grid.Column="1" Text="{Binding OperationName}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
										<asControls:SyntaxHighlightingTextBlock DefinitionSet="{x:Static appControls:OperationDurationAnalysisRuleSetEditorDialog.PatternDefinitionSet}" 
											FontSize="{StaticResource Double/OperationDurationAnalysisRuleSetEditorDialog.RuleListBox.Item.Pattern.FontSize}"
											Grid.Column="1"
											Grid.ColumnSpan="2"
											Grid.Row="1"
											Margin="{StaticResource Thickness/OperationDurationAnalysisRuleSetEditorDialog.RuleListBox.Item.Pattern.Margin}"
											Opacity="{StaticResource Double/OperationDurationAnalysisRuleSetEditorDialog.RuleListBox.Item.Pattern.Opacity}"
											Text="{Binding BeginningPattern}"
											TextTrimming="None"/>
										<asControls:SyntaxHighlightingTextBlock DefinitionSet="{x:Static appControls:OperationDurationAnalysisRuleSetEditorDialog.PatternDefinitionSet}" 
											FontSize="{StaticResource Double/OperationDurationAnalysisRuleSetEditorDialog.RuleListBox.Item.Pattern.FontSize}"
											Grid.Column="1"
											Grid.ColumnSpan="2"
											Grid.Row="2"
											Margin="{StaticResource Thickness/OperationDurationAnalysisRuleSetEditorDialog.RuleListBox.Item.Pattern.Margin}"
											Opacity="{StaticResource Double/OperationDurationAnalysisRuleSetEditorDialog.RuleListBox.Item.Pattern.Opacity}"
											Text="{Binding EndingPattern}"
											TextTrimming="None"/>
										<Border Classes="InPlaceAction_Reserved" Grid.Column="1"/>
										<StackPanel Grid.Column="2" IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}" Orientation="Horizontal">
											<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveRuleCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/Common.Delete}">
												<asControls:Image Classes="InPlaceAction_Icon">
													<DrawingImage>
														<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Delete}"/>
													</DrawingImage>
												</asControls:Image>
											</Button>
											<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].CopyRuleCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/Common.Copy}">
												<asControls:Image Classes="InPlaceAction_Icon">
													<DrawingImage>
														<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Copy}"/>
													</DrawingImage>
												</asControls:Image>
											</Button>
											<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].AddRuleBeforeCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/OperationDurationAnalysisRuleSetEditorDialog.AddRuleBefore}">
												<asControls:Image Classes="InPlaceAction_Icon">
													<DrawingImage>
														<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/EndTo}"/>
													</DrawingImage>
												</asControls:Image>
											</Button>
											<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].AddRuleAfterCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/OperationDurationAnalysisRuleSetEditorDialog.AddRuleAfter}">
												<asControls:Image Classes="InPlaceAction_Icon">
													<DrawingImage>
														<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/BeginFrom}"/>
													</DrawingImage>
												</asControls:Image>
											</Button>
											<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditRuleCommand}" CommandParameter="{Binding $parent[ListBoxItem].DataContext}" ToolTip.Tip="{DynamicResource String/Common.Edit}">
												<asControls:Image Classes="InPlaceAction_Icon">
													<DrawingImage>
														<GeometryDrawing Brush="{Binding $parent[ListBoxItem].Foreground}" Geometry="{StaticResource Geometry/Icon.Edit}"/>
													</DrawingImage>
												</asControls:Image>
											</Button>
										</StackPanel>
									</Grid>
								</DataTemplate>
							</asControls:ListBox.ItemTemplate>
						</asControls:ListBox>
						<Separator Classes="Dialog_Separator_Small" IsVisible="{Binding #ruleListBox.IsVisible}"/>
						<Button Classes="Dialog_Item_Button" Command="{Binding $parent[Window].AddRule}" Content="{DynamicResource String/Common.Add.WithDialog}"/>
					</StackPanel>
				</Border>

			</StackPanel>
		</ScrollViewer>
		
	</DockPanel>
	
</Window>
