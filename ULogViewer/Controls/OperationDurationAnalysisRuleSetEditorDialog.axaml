<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:appControls="using:CarinaStudio.ULogViewer.Controls"
		xmlns:appConverters="using:CarinaStudio.ULogViewer.Converters"
		xmlns:appCtxlBased="using:CarinaStudio.ULogViewer.ViewModels.Analysis.ContextualBased"
        xmlns:asControls="using:CarinaStudio.AppSuite.Controls"
		xmlns:ia="using:Avalonia.Xaml.Interactivity"
        xmlns:iaCore="using:Avalonia.Xaml.Interactions.Core"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="CarinaStudio.ULogViewer.Controls.OperationDurationAnalysisRuleSetEditorDialog"
        Classes="Dialog"
		ShowInTaskbar="True"
        Title="{DynamicResource String/OperationDurationAnalysisRuleSetEditorDialog.Title}"
        Width="{DynamicResource Double/OperationDurationAnalysisRuleSetEditorDialog.Width}">

	<DockPanel>

		<!-- Control buttons -->
		<Border Classes="Dialog_ControlButtonsPanel">
			<StackPanel Classes="Dialog_ControlButtonsPanel">
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].CompleteEditing}" Content="{DynamicResource String/Common.OK}" IsEnabled="{Binding $parent[Window].AreValidParameters}"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].Close}" Content="{DynamicResource String/Common.Cancel}"/>
			</StackPanel>
		</Border>

		<!-- Content -->
		<StackPanel Classes="Dialog_ContentPanel">
			
			<!-- Name -->
			<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/OperationDurationAnalysisRuleSetEditorDialog.Name}"/>
			<TextBox Name="nameTextBox" Classes="Dialog_TextBox" MaxLength="256"/>
			<Separator Classes="Dialog_Separator"/>

			<!-- Icon -->
			<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/OperationDurationAnalysisRuleSetEditorDialog.Icon}"/>
			<ComboBox Name="iconComboBox" Classes="Dialog_ComboBox" Items="{Binding $parent[Window].Icons}">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<Image Classes="Icon" Height="{DynamicResource Double/LogProfileEditorDialog.IconComboBox.Icon.Size}" Margin="{DynamicResource Thickness/LogProfileEditorDialog.IconComboBox.Icon.Margin}" Source="{Binding Converter={x:Static appConverters:LogProfileIconConverter.Default}}" Width="{DynamicResource Double/LogProfileEditorDialog.IconComboBox.Icon.Size}">
								<ia:Interaction.Behaviors>
									<iaCore:DataTriggerBehavior Binding="{Binding $parent[ComboBoxItem].IsSelected}" Value="True">
										<iaCore:ChangePropertyAction PropertyName="Source" Value="{Binding Converter={x:Static appConverters:LogProfileIconConverter.Default}, ConverterParameter=Light}"/>
									</iaCore:DataTriggerBehavior>
									<iaCore:DataTriggerBehavior Binding="{Binding $parent[ComboBoxItem].IsSelected}" Value="False">
										<iaCore:ChangePropertyAction PropertyName="Source" Value="{Binding Converter={x:Static appConverters:LogProfileIconConverter.Default}}"/>
									</iaCore:DataTriggerBehavior>
								</ia:Interaction.Behaviors>
							</Image>
							<TextBlock Text="{Binding Converter={x:Static appControls:LogProfileEditorDialog.LogProfileIconNameConverter}}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
						</StackPanel>
					</DataTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>
			<Separator Classes="Dialog_Separator"/>

			<!-- Rules -->
			<TextBlock Classes="Dialog_TextBlock" Text="{DynamicResource String/OperationDurationAnalysisRuleSetEditorDialog.Rules}"/>
			<Grid ColumnDefinitions="*,Auto">
				<asControls:ListBox Name="ruleListBox" Classes="Dialog_ListBox" Height="{StaticResource Double/OperationDurationAnalysisRuleSetEditorDialog.RuleListBox.Height}" Items="{Binding $parent[Window].Rules}">
					<asControls:ListBox.ItemTemplate>
						<DataTemplate>
							<Grid ColumnDefinitions="*,Auto">
								<TextBlock Text="{Binding OperationName}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
								<Border Classes="InPlaceAction_Reserved"/>
								<StackPanel Grid.Column="1" IsVisible="{Binding $parent[ListBoxItem].IsPointerOver}" Orientation="Horizontal">
									<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].RemoveRule}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Delete}">
										<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.Delete}"/>
									</Button>
									<Button Classes="InPlaceAction_Button" Command="{Binding $parent[Window].EditRule}" CommandParameter="{Binding $parent[ListBoxItem]}" ToolTip.Tip="{DynamicResource String/Common.Edit}">
										<Image Classes="InPlaceAction_Icon" Source="{DynamicResource Image/Icon.Edit}"/>
									</Button>
								</StackPanel>
							</Grid>
						</DataTemplate>
					</asControls:ListBox.ItemTemplate>
				</asControls:ListBox>
				<Button Classes="BrowseButton" Command="{Binding $parent[Window].AddRule}" Grid.Column="1" ToolTip.Tip="{DynamicResource String/Common.Add}" VerticalAlignment="Top">
					<Image Classes="BrowseButtonIcon" Source="{StaticResource Image/Icon.Add}"/>
				</Button>
			</Grid>

		</StackPanel>
		
	</DockPanel>
	
</Window>
