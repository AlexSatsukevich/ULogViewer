<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:abControls="using:CarinaStudio.Controls"
		xmlns:abConverters="using:CarinaStudio.Data.Converters"
		xmlns:appAnalysis="using:CarinaStudio.ULogViewer.ViewModels.Analysis"
		xmlns:appControls="using:CarinaStudio.ULogViewer.Controls"
		xmlns:appConverters="using:CarinaStudio.ULogViewer.Converters"
		xmlns:appLogs="using:CarinaStudio.ULogViewer.Logs"
        xmlns:asControls="using:CarinaStudio.AppSuite.Controls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="CarinaStudio.ULogViewer.Controls.OperationCountingAnalysisRuleEditorDialog"
        Classes="Dialog"
        Title="{DynamicResource String/OperationCountingAnalysisRuleEditorDialog.Title}"
        Width="{DynamicResource Double/OperationCountingAnalysisRuleEditorDialog.Width}">

	<Panel>

		<!-- Content -->
		<DockPanel>

			<!-- Control buttons -->
			<Border Classes="Dialog_ControlButtonsPanel">
				<StackPanel Classes="Dialog_ControlButtonsPanel">
					<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].OpenDocumentation}" Content="{DynamicResource String/Common.Help}"/>
					<Separator Classes="Dialog_Separator_Small"/>
					<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].GenerateResultCommand}" Content="{DynamicResource String/Common.OK}"/>
					<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].Close}" Content="{DynamicResource String/Common.Cancel}"/>
				</StackPanel>
			</Border>

			<!-- Content -->
			<ScrollViewer MaxHeight="{StaticResource Double/OperationCountingAnalysisRuleEditorDialog.Content.MaxHeight}">
				<StackPanel Classes="Dialog_ContentPanel_WithItemsGroups">

					<!-- Common -->
					<Border Classes="Dialog_ItemsGroup_Container">
						<StackPanel>
					
							<!-- Operation name -->
							<asControls:DialogItemGrid>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/OperationCountingAnalysisRuleEditorDialog.OperationName}"/>
								<TextBox Name="operationNameTextBox" Classes="Dialog_Item_TextBox" Grid.Column="1" MaxLength="256" Watermark="{DynamicResource String/Common.Required}"/>
							</asControls:DialogItemGrid>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- Pattern -->
							<asControls:DialogItemBorder>
								<StackPanel Classes="Dialog_Item_Text_Container">
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/DisplayableLogAnalysisRuleEditorDialog.Pattern}"/>
									<TextBlock Classes="Dialog_TextBlock_Description" IsVisible="{Binding #patternEditor.IsPatternTextValid}" Text="{DynamicResource String/DisplayableLogAnalysisRuleEditorDialog.Pattern.Description}"/>
									<Grid Classes="Dialog_IconText_Container_Description" ColumnDefinitions="Auto,*" IsVisible="{Binding !#patternEditor.IsPatternTextValid}">
										<Image Classes="Dialog_Icon_Description" Source="{StaticResource Image/Icon.Error.Outline.Colored}"/>
										<TextBlock Classes="Dialog_TextBlock_Description_Error" Grid.Column="1" Text="{DynamicResource String/Common.InvalidFormat}"/>
									</Grid>
								</StackPanel>
							</asControls:DialogItemBorder>
							<Line Classes="Dialog_Item_Separator_Inner"/>
							<appControls:PatternEditor Name="patternEditor" IsCapturingGroupsEnabled="True" MinHeight="{DynamicResource Double/KeyLogAnalysisRuleEditorDialog.PatternInput.Height}" Watermark="{DynamicResource String/Common.Required}"/>
							<Line Classes="Dialog_Item_Separator_Inner"/>
							<SelectableTextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/DisplayableLogAnalysisRuleEditorDialog.Pattern.Description.Detailed}"/>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- Level -->
							<asControls:DialogItemGrid>
								<StackPanel Classes="Dialog_Item_Text_Container">
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/DisplayableLogAnalysisRuleEditorDialog.Level}"/>
									<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/DisplayableLogAnalysisRuleEditorDialog.Level.Description}"/>
								</StackPanel>
								<ComboBox Name="levelComboBox" Classes="Dialog_Item_ComboBox" Grid.Column="1" Items="{Binding Source={x:Type appLogs:LogLevel}, Converter={x:Static abConverters:EnumConverters.Values}}">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<Grid ColumnDefinitions="Auto,*">
												<Border Classes="ComboBoxItem_Icon" Background="{Binding Converter={x:Static appConverters:LogLevelBrushConverter.Background}}" BorderBrush="{DynamicResource ComboBoxItemForeground}" BorderThickness="1"/>
												<TextBlock Classes="ComboBoxItem_TextBlock" Grid.Column="1" Text="{Binding Converter={x:Static appControls:SessionView.LogLevelNameConverter}}"/>
											</Grid>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</asControls:DialogItemGrid>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- Conditions -->
							<asControls:DialogItemGrid>
								<StackPanel Classes="Dialog_Item_Text_Container">
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/DisplayableLogAnalysisRuleEditorDialog.Conditions}"/>
									<TextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/DisplayableLogAnalysisRuleEditorDialog.Conditions.Description}"/>
								</StackPanel>
								<TextBlock Classes="Dialog_TextBlock" Grid.Column="1" IsVisible="{Binding !$parent[Window].Conditions.Count}" Text="{DynamicResource String/Common.None}"/>
							</asControls:DialogItemGrid>
							<Line Classes="Dialog_Item_Separator_Inner"/>
							<appControls:DisplayableLogAnalysisConditionsEditor Conditions="{Binding $parent[Window].Conditions}" VerticalScrollBarVisibility="Disabled"/>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- Interval -->
							<asControls:DialogItemGrid>
								<StackPanel Classes="Dialog_Item_Text_Container">
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/OperationCountingAnalysisRuleEditorDialog.Interval}"/>
									<Grid Classes="Dialog_IconText_Container_Description" ColumnDefinitions="Auto,*" IsVisible="{Binding !#intervalTextBox.IsTextValid}">
										<Image Classes="Dialog_Icon_Description" Source="{StaticResource Image/Icon.Error.Outline.Colored}"/>
										<TextBlock Classes="Dialog_TextBlock_Description_Error" Grid.Column="1" Text="{DynamicResource String/Common.InvalidFormat}"/>
									</Grid>
								</StackPanel>
								<abControls:TimeSpanTextBox Name="intervalTextBox" Classes="Dialog_Item_TextBox" Grid.Column="1" Watermark="{DynamicResource String/Common.Required}"/>
							</asControls:DialogItemGrid>
							<Line Classes="Dialog_Item_Separator_Inner"/>
							<SelectableTextBlock Classes="Dialog_TextBlock_Description" Text="{DynamicResource String/TimeSpanTextBox.FormatDescription}" TextWrapping="Wrap"/>

						</StackPanel>
					</Border>
					<Separator Classes="Dialog_Separator"/>

					<!-- Result -->
					<Border Classes="Dialog_ItemsGroup_Container">
						<StackPanel>

							<!-- Result type -->
							<asControls:DialogItemGrid>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/DisplayableLogAnalysisRuleEditorDialog.ResultType}"/>
								<ComboBox Name="resultTypeComboBox" Classes="Dialog_Item_ComboBox" Grid.Column="1" Items="{Binding Source={x:Type appAnalysis:DisplayableLogAnalysisResultType}, Converter={x:Static abConverters:EnumConverters.Values}}">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<Grid ColumnDefinitions="Auto,*">
												<Panel Classes="ComboBoxItem_Icon">
													<Image Classes="Icon" IsVisible="{Binding $parent[ComboBoxItem].IsSelected}" Source="{Binding Converter={x:Static appConverters:DisplayableLogAnalysisResultIconConverter.Default}, ConverterParameter=Light}"/>
													<Image Classes="Icon" IsVisible="{Binding !$parent[ComboBoxItem].IsSelected}" Source="{Binding Converter={x:Static appConverters:DisplayableLogAnalysisResultIconConverter.Default}}"/>
												</Panel>
												<TextBlock Classes="ComboBoxItem_TextBlock" Grid.Column="1" Text="{Binding Converter={x:Static appConverters:EnumConverters.DisplayableLogAnalysisResultType}}"/>
											</Grid>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</asControls:DialogItemGrid>

						</StackPanel>
					</Border>
					
				</StackPanel>
			</ScrollViewer>
			
		</DockPanel>

		<!-- Tutorial -->
		<asControls:FullWindowTutorialPresenter Name="tutorialPresenter"/>

	</Panel>
	
</Window>
